---
layout: post
title: Announcing the release of Samza 1.1
date: '2019-03-12T21:48:33+00:00'
categories: samza
---
We are thrilled to announce the release of <strong>Apache Samza 1.1.0</strong><br />
<p>
Today Samza forms the backbone of hundreds of real-time production applications across a multitude of companies, such as LinkedIn, VMWare, Slack, Redfin among many others. 
This release of Samza adds a variety of features and capabilities to Samza&rsquo;s existing arsenal, coupled with improved <em>documentation</em>, <em>code</em> snippets, <em>examples</em>.
Samza provides leading support for large-scale stateful stream processing with:
</p>

<ul>
<li>First class support for local state (with RocksDB store). This allows a stateful application to scale up to 1.1 Million events/sec on a single machine with SSD.</li>
<li>Support for incremental checkpointing of state instead of full snapshots. This enables Samza to scale to applications with very large state.</li>
<li>A fully asynchronous programming model that makes parallelizing remote calls efficient and effortless.</li>
<li>High level API for expressing complex stream processing pipelines in a few lines of code.</li>
<li>Beam Samza Runner that marries Beam’s best in class support for EventTime based windowed processing and sophisticated triggering with Samza’s stable and scalable stateful processing model. </li>
<li>A fully pluggable model for input sources (e.g. Kafka, Kinesis, DynamoDB streams etc.) and output systems (HDFS, Kafka, ElastiCache etc.).</li>
<li>A Table API that provides a common abstraction for accessing remote or local databases and allowing developers are able to "join" an input event stream with such a Table.</li>
<li>Flexible deployment model for running the the applications in any hosting environment and with cluster managers other than YARN.</li>
<li>Features like canaries, upgrades and rollbacks that support extremely large deployments with minimal downtime.</li>
</ul>

<h3>New Features, Upgrades and Bug Fixes</h3>

This release brings the following features, upgrades, and capabilities: * We have created a new Samza Stream Processing <a href="https://www.youtube.com/playlist?list=PLZDyxA22zzGyNgtBMUIXAgIaO5Ok3PR-x">video series on Youtube</a> * New and improved documentation, code snippets, and examples for using the latest version of Samza with Apache Beam (Code samples are here: <a href="https://github.com/apache/samza-beam-examples">https://github.com/apache/samza-beam-examples</a>)

<h3>API enhancements and simplifications:</h3>

<ul>

<li><a href="https://issues.apache.org/jira/browse/SAMZA-1981">SAMZA-1981</a> Consolidate table descriptors to samza-api.</li>
<li><a href="https://issues.apache.org/jira/browse/SAMZA-1998">SAMZA-1998</a> Table API refactoring.</li>
<li><a href="https://issues.apache.org/jira/browse/SAMZA-1980">SAMZA-1980</a> Rename LocalStoreBackedTable to LocalTable.</li>
<li><a href="https://issues.apache.org/jira/browse/SAMZA-2043">SAMZA-2043</a> Consolidate ReadableTable and ReadWriteTable.</li>
<li><a href="https://issues.apache.org/jira/browse/SAMZA-2012">SAMZA-2012</a> Add API for wiring an external context through to application processing.</li>
<li><a href="https://issues.apache.org/jira/browse/SAMZA-2026">SAMZA-2026</a> Refactor remote table API to separate retry policy settings.</li>
<li><a href="https://issues.apache.org/jira/browse/SAMZA-2041">SAMZA-2041</a> Add system descriptors for HDFS and Kinesis.</li>
<li><a href="https://issues.apache.org/jira/browse/SAMZA-2081">SAMZA-2081</a> Samza SQL: Type system for Samza SQL.</li>
<li><a href="https://issues.apache.org/jira/browse/SAMZA-2106">SAMZA-2106</a> Samza App & Job Config Refactor.</li>

</ul>

<h3>State Store Restoration:</h3>

<ul>
<li><a href="https://issues.apache.org/jira/browse/SAMZA-2018">SAMZA-2018</a> State restore improvements using RocksDB writebatch API.</li>
</ul>

<h3>Standalone Improvements:</h3>

<ul>
<li><a href="https://issues.apache.org/jira/browse/SAMZA-1973">SAMZA-1973</a> Unify the TaskNameGrouper interface for yarn and standalone.</li>
<li><a href="https://issues.apache.org/jira/browse/SAMZA-1952">SAMZA-1952</a> StreamPartitionCountMonitor for standalone.</li>
</ul>

<h3>Other Upgrades and Bug-fixes:</h3>

<ul>
<li><a href="https://issues.apache.org/jira/browse/SAMZA-1638">SAMZA-1638</a> Recreate SystemProducer on KafkaCheckpointManager.writeCheckpoint failure.</li>

<li><a href="https://issues.apache.org/jira/browse/SAMZA-1946">SAMZA-1946</a> Problem with Race between TimerListener initialization and timers fired from init().</li>

<li><a href="https://issues.apache.org/jira/browse/SAMZA-2004">SAMZA-2004</a> Add ability to disable table metrics.</li>

<li><a href="https://issues.apache.org/jira/browse/SAMZA-2013">SAMZA-2013</a> Account for cycles in graph traversal within Execution Planner.</li>

<li><a href="https://issues.apache.org/jira/browse/SAMZA-2015">SAMZA-2015</a> Refactor timer handling in tables to be consistent with stores.</li>

<li><a href="https://issues.apache.org/jira/browse/SAMZA-2072">SAMZA-2072</a> Update guava to 23.0.</li>

<li><a href="https://issues.apache.org/jira/browse/SAMZA-2090">SAMZA-2090</a> Fix flush behavior for remote and hybrid tables.</li>

<li><a href="https://issues.apache.org/jira/browse/SAMZA-2108">SAMZA-2108</a> Check for host affinity config before resolving preferred host matching.</li>

<li><a href="https://issues.apache.org/jira/browse/SAMZA-2109">SAMZA-2109</a> Reduce default-buffer sizes for per-partition queues.</li>

<li><a href="https://issues.apache.org/jira/browse/SAMZA-2118">SAMZA-2118</a> Improve the shutdown sequence of AsyncRunLoop.</li>

<li><a href="https://issues.apache.org/jira/browse/SAMZA-2119">SAMZA-2119</a> Upgrading yarn-client version to 2.7.1.</li>

<li><a href="https://issues.apache.org/jira/browse/SAMZA-2122">SAMZA-2122</a> Fix the task caught-up logic which doesn't handle no incoming messages</li>
</ul>

The complete list of resolved Jira tickets for this release is found <a href="https://issues.apache.org/jira/issues/?jql=project%20%3D%20SAMZA%20AND%20resolution%20%20%3D%20Fixed%20%20AND%20(fixVersion%20%3E%3D%201.1%20)%20ORDER%20BY%20createdDate%20%20DESC">here</a>.

This release also includes improvements such as durable state in high-level API, Zookeeper-based  deployment stability, and multi-stage batch processing, and bug fixes such as KafkaSystemProducer concurrent sends and flushes.
<br />


<h3>API Updates</h3>
 
 The following imports for Table API have been updated: 
<ul>
 
 <li> Rename the import <i>org.apache.samza.storage.kv.descriptors.BaseLocalStoreBackedTableDescriptor</i> to <i>org.apache.samza.storage.kv.descriptors.BaseLocalTableDescriptor</i></li>
 
 <li> Rename the import <i>org.apache.samza.table.remote.descriptors.RemoteTableDescriptor</i> to <i>org.apache.samza.table.descriptors.RemoteTableDescriptor</i></li>
 
 <li> Rename the import <i>org.apache.samza.table.caching.descriptors.CachingTableDescriptor</i> to <i>org.apache.samza.table.descriptors.CachingTableDescriptor</i></li>
</ul>
 
<h3>Configurations Updates</h3>
 
 The job.name and job.id configs are now deprecated in favor of app.name and app.id configs respectively.


A source download of Samza 1.1.0 is available <a href="https://dist.apache.org/repos/dist/release/samza/1.1.0/">here</a>, and is also available in Apache’s Maven repository. Samza’s download <a href="https://samza.apache.org/startup/download/">page</a> for details and Samza’s feature preview for new features. 

<h3>Community Developments</h3>
A <a href="https://www.meetup.com/Stream-Processing-Meetup-LinkedIn/">Stream Processing with Apache Kafka & Apache Samza meetup/symposium</a> that was held on March 20th which had following presentation for Samza:

<ul>
<li>Apache Samza 1.0: Recent Advances and our plans for future in Stream Processing</li>
</ul>

<h3>Contribute</h3>

It’s a great time to get involved. You can start by reviewing the <a href="http://samza.apache.org/startup/preview/#try-it-out">tutorials</a>, signing up for the <a href="http://samza.apache.org/community/mailing-lists.html">mailing list</a>, and grabbing some <a href="https://issues.apache.org/jira/issues/?jql=project%20%3D%20SAMZA%20AND%20labels%20%3D%20newbie%20AND%20status%20%3D%20Open">newbie JIRAs</a>. 

I’d like to close by thanking everyone who’s been involved in the project. It’s been a great experience to be involved in this community, and I look forward to its continued growth.
