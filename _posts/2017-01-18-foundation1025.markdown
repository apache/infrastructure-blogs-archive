---
layout: post
title: 'The ASF asks: Have you met Apache Ignite?'
date: '2017-01-18T10:10:02+00:00'
categories: foundation
---
<div>Since 1999, The Apache Software Foundation (ASF) has been recognized as a leading source for an array of Open Source software and tools that meet the demand for interoperable, adaptable, and sustainable solutions. The all-volunteer ASF develops, stewards, and incubates dozens of enterprise-grade Open Source projects that power mission-critical applications in financial services, aerospace, publishing, government, healthcare, research, infrastructure, and more. From Abdera to ZooKeeper, the demand for ASF's reliable, community-driven software continues to grow dramatically across many categories, including Cloud, IoT, Artificial Intelligence and Machine Learning, Mobile, and Big Data, where the Apache Hadoop ecosystem dominates the marketplace.</div> 
  <div><br /></div> 
  <div>Did you know that numerous Fortune 500 enterprises depend on Apache Ignite's in-memory data platform to process large-scale data sets in real-time, at orders of magnitude faster than traditional technologies?</div> 
  <div><br /></div> 
  <div>We are pleased to showcase Apache Ignite, the high-performance In-Memory Data Fabric that provides in-memory data caching, partitioning, processing, and querying components.</div> 
  <div><br /></div> 
  <div><strong>Quick peek:</strong> Apache Ignite is an integrated and distributed In-Memory Data Fabric for computing and transacting on large-scale data sets in real-time, orders of magnitude faster than possible with traditional disk-based or flash technologies. It is designed to easily power both existing and new applications in a distributed, massively parallel architecture on affordable, industry-standard hardware.</div> 
  <div><br /></div> 
  <div><strong>Background:</strong> Originally created at GridGain as its flagship in-memory computing (IMC) platform, Ignite entered the Apache Incubator in September 2014 and graduated as an Apache Top-Level Project in August 2015.</div> 
  <div><br /></div> 
  <div><strong>Why Ignite:</strong> Apache Ignite addresses today's Fast Data and Big Data needs by providing a comprehensive in-memory data fabric, which includes a data grid with SQL and transactional capabilities, in-memory streaming, an in-memory file system, and more.</div> 
  <div><br /></div> 
  <div>Heavily benchmarked, Ignite has been built from the ground up to linearly scale to hundreds of nodes with strong semantics for data locality and affinity data routing to reduce redundant data noise. Ignite data grid is lightning fast and is one of the fastest implementations of transactional or atomic data in distributed clusters today.</div> 
  <div><br /></div> 
  <div>Unlike other Big Data processing solutions, Apache Ignite treats RAM as a primary storage facility (as opposed to being used exclusively for processing). As such, Ignite's memory-first approach is more efficient and faster: with improved system indexes, reduced data fetch time, and no delays in a stream content processing, among other benefits.</div> 
  <div><br /></div> 
  <div>Additionally --and unique to Apache Ignite-- its SQL Grid eliminates the need for painful and challenging migration from relational database to in-memory data grid (IMDG), alleviating the need for developers to have to rewrite SQL based code to IMDG's native APIs. This means that developers can keep using existing applications and tools written for relational databases and based on SQL language with very little to no code modification. Ignite SQL Grid is horizontally scalable, fault tolerant, and SQL ANSI-99 compliant.</div> 
  <div><br /></div> 
  <div>Using Apache Ignite, developers benefit from:</div> 
  <div> 
    <ul> 
      <li>Data Grid --replicate or partition data in memory within the cluster;</li> 
      <li>SQL Grid --add in-memory distributed database capabilities;</li> 
      <li>Compute Grid --distribute computations across cluster nodes;</li> 
      <li>Service Grid -- implement fault-tolerant microservices based solutions;</li> 
      <li>Streaming &amp; CEP --easily stream large volumes of data into Ignite processing them in real-time; and</li> 
      <li>Data Structures --distribute own data structure across the cluster.</li> 
    </ul> 
  </div> 
  <div><br /></div> 
  <div>To solve real-time business issues and meet application requirements for the highest performance and scale, Apache Ignite leverages and integrates a host of Apache projects including Spark, Hadoop, YARN, and Mesos.</div> 
  <div><br /></div> 
  <div><strong>Latest release:</strong> Apache Ignite v1.8 on 9 December 2016 under the Apache License v.2.0. More details can be found below and in the release notes.</div> 
  <div><br /></div> 
  <div><strong>What's under the hood:</strong> New in Apache Ignite v1.8:</div> 
  <div> 
    <ul> 
      <li>SQL Grid now fully supports all DML commands including UPDATE, INSERT and DELETE queries. A full-fledged support of DML and SELECT statements allows to interact with Apache Ignite using standard SQL commands connecting via ODBC and JDBC drivers. This provides true cross-platform connectivity even from languages such as PHP and Ruby which are not natively supported by the project.&nbsp;</li> 
      <li>Redis protocol implementation which enables users to store and retrieve distributed data from Apache Ignite cache using any Redis compatible client.</li> 
      <li>Ignite.NET provides .NET Entity Framework 2nd Level Cache solution that stores data in the distributed Ignite cache. This is ideal for scenarios with multiple application servers using a single SQL database via Entity Framework: cached queries are shared between all machines in the cluster.</li> 
      <li>Ignite.NET implements ASP.NET session caching provider that stores session data in the Ignite cache which distributes session state across multiple servers in order to provide high availability and fault tolerance.</li> 
      <li>Deadlock detection mechanism has been improved and now works for optimistic transaction and near caches.</li> 
    </ul> 
  </div> 
  <div><br /></div> 
  <div>Check out the Apache Ignite blog for articles, insight, how-tos, and additional resources at <a href="https://ignite.apache.org/blogs.html">https://ignite.apache.org/blogs.html</a></div> 
  <div><br /></div> 
  <div>For downloads, documentation, examples, use cases, and more information, visit <a href="http://ignite.apache.org/">http://ignite.apache.org/</a> .</div> 
  <div><br /></div> 
  <div># # #</div> 
  <div><br /></div>
