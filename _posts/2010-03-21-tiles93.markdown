---
layout: post
title: 'Autotag: autogeneration completed'
date: '2010-03-21T20:33:11+00:00'
categories: tiles
---
<p>After about two months of development, the <a href="http://svn.eu.apache.org/repos/asf/tiles/sandbox/trunk/tiles-autotag/" title="Autotag SVN directory">Autotag project</a> is feature-complete. JSP tags, Freemarker directive models and Velocity directives are generated from a common template models.</p><p>These template models must have a single public method, with this signature:</p><p><span class="Apple-style-span" style="font-family: monospace; white-space: pre; ">public void execute(&lt;parameters&gt;, Request request, ModelBody modelBody);</span>&nbsp;</p><p>The modelBody parameter is optional: if it is not specified, the template model does not have a body.&nbsp;</p><p>For more features (required fields, default values, a name different to the one specified in the parameter list) a new annotation @Parameter has been created.</p><p>A Maven 2 (based on 2.2.1) plugin contains four Mojos:</p><p>&nbsp;</p><ul><li>the first mojo (create-descriptor) reads the template models and produces an XML file containing the description of the read models;</li><li>the others (generate-jsp, generate-freemarker, generate-velocity) produce boilerplate code.</li></ul><div><p>The projects using the latter mojos must include some runtime dependencies.</p><p>All the <a href="http://svn.eu.apache.org/repos/asf/tiles/sandbox/trunk/tiles3/" title="Tiles 3 SVN sandbox">Tiles 3</a> boilerplate code has been removed and used the plugin instead: it's a lot of boilerplate, boring code, now generated automatically.</p><p>Now the next step is to complete the test cases and to convince other potential users (I'm thinking of Struts 2) that it might help.</p></div><p>&nbsp;</p>
