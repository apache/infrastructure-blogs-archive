---
layout: post
title: A sneak peak into Log4j 2.7
date: '2016-09-26T17:17:35+00:00'
categories: logging
---
Log4j 2.7 will be released in a few days. The community is now reviewing the release for any last minute showstopper. Meanwhile, you may be interested in a sneak peek into what is coming.

<div align="center">
<p>
<table border="1" cellspacing="0" align="center" style="width:400px">
<tr>
<td align="center">
Log4j 2 is nominated for the JAX Innovation Awards! <br><br>
Do you like its performance, garbage-free logging, and easy and flexible configuration?<br><br>
Log4j 2 needs your love.
<a href="https://jaxlondon.com/jax-awards/">Vote for Log4j 2!</a><br><br>
Voting closes September 29th, 2016.<br><br>
</td>
</tr>
</table>
</div>

<h3>Scala API</h3>
Log4j 2.7 includes a <tt>Logging</tt> trait that removes some boilerplate code. Your Scala code can now look like this:
<pre>
import org.apache.logging.log4j.scala.Logging
 
class MyClass extends BaseClass with Logging {
  def doStuff(): Unit = {
    logger.info("Doing stuff")
  }
}</pre>

This also enables a more compact form of parameterized logging. Instead of the common Java form:
<pre>
logger.debug("Logging in user {} with birthday {}", user.getName(), user.calcBirthday());
</pre>

In Scala, you can use <a href="http://docs.scala-lang.org/overviews/core/string-interpolation.html>string interpolation</a> to achieve this:
<pre>
logger.debug(s"Logging in user ${user.getName} with birthday ${user.calcBirthday}")
</pre>

<h3>Non-Blocking Queues in Async Appender</h3>
In addition to Log4j 2's <a href="https://logging.apache.org/log4j/2.x/manual/async.html">Asynchronous Loggers</a>, which are based on the LMAX Disruptor library, the 2.7 release allows you to configure the Async Appender to use a different queue implementation, including a few non-blocking ones:
<ul>
  <li>ArrayBlockingQueue - This is the default implementation that uses <a href="https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/ArrayBlockingQueue.html">ArrayBlockingQueue</a></li>
  <li>LinkedTransferQueue - This uses the JDK <a href="https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/LinkedTransferQueue.html">LinkedTransferQueue</a> which was introduced in Java 7.</li>
  <li>JCToolsBlockingQueue - This uses the <abbr title="multiple producer single consumer">MPSC</abbr> bounded lock-free queue in <a href="https://jctools.github.io/JCTools/">JCTools</a>.</li>
  <li>DisruptorBlockingQueue - This uses the <a href="https://github.com/conversant/disruptor">Conversant Disruptor</a> BlockingQueue. (Not to be confused with the LMAX Disruptor.)</li>
</ul>

<h3>Custom Context Data Injection</h3>
Context data is data that is set by the application to be included in all subsequent log events. The default source for context data is the <a href="https://logging.apache.org/log4j/2.x/manual/thread-context.html">ThreadContext</a>.
<p>
From Log4j 2.7, users can configure a custom <tt>ContextDataInjector</tt> that can 
<ul>
<li>take context data from any source, and</li>
<li>use values of any type (not just Strings).</li>
</ul>
In addition, the <tt>ThreadContext</tt> map is now garbage-free. This is disabled by default, users need to enable this explicitly.

<h3>...and much more</h3> 
RoutingAppender can now be configured with scripts, a new ScriptAppenderSelector was introduced that creates an Appender specified by a Script, FileAppender (and its Rolling equivalent) can now create files on-demand, and there are various other improvements.

<h3>Vote For Us!</h3>
<div align="center">
<br><br>
<a href="https://jaxlondon.com/jax-awards/"><img src="https://logging.apache.org/log4j/log4j-2.6.2/images/VoteLog4j2-JAX2016InnovationAward.jpg"></a>
<p>
<table border="1" cellspacing="0" align="center" style="width:400px">
<tr>
<td align="center">
Log4j 2 is nominated for the JAX Innovation Awards! <br><br>
Do you like its performance, garbage-free logging, and easy and flexible configuration?<br><br>
Log4j 2 needs your love.
<a href="https://jaxlondon.com/jax-awards/">Vote for Log4j 2!</a><br><br>
</td>
</tr>
</table>
</div>
