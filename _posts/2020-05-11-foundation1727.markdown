---
layout: post
title: 'Success at Apache: Remote Collaboration in the Time of Coronavirus'
date: '2020-05-11T14:05:34+00:00'
categories: foundation
---
<p><b><i>by Marvin Humphrey</i></b></p><p>I "arrived" at the Apache Software Foundation in 2005, unreasonably angry&nbsp;about a bug in Apache Lucene.&nbsp; By "arrived", I mean that I sent the first few emails among several thousand I would go on to send over the next 15 years — the ASF didn't have a physical office where I could show up to buttonhole and berate some unlucky customer service representative.&nbsp; An unreasonably patient Lucene contributor named Doug Cutting talked me down.<br></p><p>Because the ASF has always been a virtual organization, the Coronavirus pandemic has had minimal impact on its day-to-day operations.&nbsp; While individual contributors may be personally affected, at the collective level there's been no mad scramble to adapt.</p><p><span style="font-size: 14px;">Others have not been so fortunate.&nbsp; All around the world organizations have&nbsp;</span>been struggling to revamp their processes and infrastructure to comply with "social distancing" protocols.&nbsp; Sadly, many have already laid off workers, or even closed their doors for good.</p><p>And yet, there is a huge pool of work which could conceivably be performed remotely but isn't yet — or which is suddenly being performed remotely but inefficiently.&nbsp; If we can accelerate and streamline the transition to remote work, many jobs and businesses could be saved.&nbsp; With some creativity, our interim "new normal" could be more propsperous, and perhaps sooner than we think!</p><p><span style="font-size: 14px;">Are you an Open Source contributor?&nbsp; If so, you possess expertise in remote&nbsp;</span>operations which is desperately needed in today's challenging economic environment.&nbsp; Let's talk about what we know and how we can help.</p><p><span style="font-size: 14px;"><b><br>The Internet Turns People Into Jerks</b></span></p><p>People type things at each other over the internet that they would <b>never</b> say to someone's face.&nbsp; In person, we calibrate our language based on feedback we receive via facial expressions, tone of voice, and body language.&nbsp; But when all communication is written, the feedback loop is broken — and all too easily, vicious words fall out of our fingertips.</p><p>Suddenly-remote workers may find themselves exposed to this phenomenon as conversations that once took place in the office migrate to Slack, email, and other text-centric communication channels.&nbsp; But it can be tricky learning to recognize when a conversation being conducted via a text channel has gotten overheated — it takes an intuitive leap of empathy, possibly aided by dramatic reading of intemperate material a la Celebrities Read Mean Tweets <a href="https://www.youtube.com/playlist?list=PLs4hTtftqnlAkiQNdWn6bbKUr-P1wuSm0" target="_blank">https://www.youtube.com/playlist?list=PLs4hTtftqnlAkiQNdWn6bbKUr-P1wuSm0</a> on Jimmy Kimmel.</p><p>Open Source communities have grappled with incivility for as long as the movement has existed.&nbsp; Over time, "ad hominem" personal attacks have gradually become taboo because of their insidious corrosive effect; there exists broad cultural consensus that you should attack the idea rather than person behind it.</p><p>Defenses have become increasingly formalized and sophisticated as more and more communities have adopted a "code of conduct".&nbsp; While the primary purpose of such documents is guard gainst harassment and other serious misconduct, they often contain aspirational recommendations about how community members should treat each other — because serious misconduct is more likely to occur in an environment of constant low-grade incivility.</p><p>Regardless of whether your organization adopts a code of conduct, it won't hurt to raise awareness among remote team members of the suceptibility of text-based communications to incivility — so that they may identify and confront it in themselves and others and shunt everyone towards more constructive patterns of communication.</p><p><br><b>Keeping Everyone "In The Loop"<br></b></p><p>Coordination is a troublesome problem even when everyone works in the same office, but the difficulties are magnified in remote environments where it takes more effort to initiate and conduct conversations.&nbsp; Teams can become&nbsp;fragmented and individuals can become isolated unless a culture is established of keeping everyone "in the loop".</p><p>At the ASF, the problem is especially acute because its virtual communities are spread out across the globe.&nbsp; Due to time zone differences, it is typically infeasible to get all stakeholders together for a meeting — even a&nbsp;virtual meeting held via conference call or videochat.&nbsp; Additionally, many stakeholders in ASF communities do not have the availability to participate in&nbsp;real-time conversations regularly because they are not employed to to work on projects full-time.</p><p>"Synchronous" communication channels like face-to-face, videochat, phone, text chat, and so on are good for rapid-fire iteration and refinement of ideas, but they effectively exclude anyone who isn't following along in real-time.&nbsp; Even if conversations are captured, such as with AV-recorded live meetings or logged text chats, it is inefficient and often confusing to review how things went down after the fact.</p><p><span style="font-size: 14px;">The solution that the ASF has adopted is to require that all meaningful&nbsp;</span>project decisions be made in a <b>single</b>, <b>asynchronous communication channel</b>.</p><ul><li>The channel must be <b>canonical</b>&nbsp;so that all participants can have confidence that if they at least skim everything that goes by in that one channel, they will not miss anything crucial.</li><li><span style="font-size: 14px;">The channel must be <b>asynchronous</b>&nbsp;to avoid excluding stakeholders with&nbsp;</span>limited availability.</li></ul><p><span style="font-size: 14px;">Synchronous conversations will still happen outside this canonical channel —</span>and they <b>should</b>, because again, synchronous conversations are efficient for iterating on ideas!&nbsp; However, the expectation is that a summary of any such offline conversation must be written up and posted to the canonical channel, allowing all stakeholders the opportunity to have their say.</p><p><span style="font-size: 14px;">At the ASF, the canonical channel must be an email list, but for other&nbsp;</span>organizations different tools might be more appropriate: a non-technical task manager such as Asana, a wiki, even a spreadsheet (for a really small team). The precise technology doesn't matter: the point is that there are significant benefits which obtain if a channel exists which is 1) canonical, and 2) asynchronous.<br><br></p><p><span style="font-size: 14px;"><b>Decision Making</b></span></p><p>In an office, decision makers can absorb a certain amount of information by osmosis — via overheard conversations, working lunches, impromptu collaborations, and so on.&nbsp; That source of information goes disconcertingly dry on suddenly-remote teams, leaving only information siphoned through more deliberate action.</p><p><span style="font-size: 14px;">A canonical, asynchronous communication channel can compensate to some extent,&nbsp;</span>providing transparency about what is being worked on and how well people are working together, and facilitating oversight even while most of the work gets done solo.&nbsp; Because properly used asynchronous channels capture summaries rather than chaotic and verbose real-time exchanges, the information they provide is more easily consumed by observers watching from a distance.&nbsp; The canonical channel also provides an arena for gauging consensus among stakeholders and for documenting signoff.</p><p><span style="font-size: 14px;">"Lazy consensus" is a particularly productive kind of signoff, where a&nbsp;</span>proposal is posted to the canonical channel and if there are no objections within some time frame (72 hours at the ASF), the proposal is considered&nbsp;implicitly approved.&nbsp; Provided that the channel is monitored actively enough that flawed proposals get flagged reliably, "lazy consensus" is a powerful tool for encouraging initiative — a precious quality in contributors collaborating remotely.<br><br></p><p><span style="font-size: 14px;"><b>Conclusion</b></span></p><p>Organizations are adapting in myriad ways to the economic crisis brought on by the Coronavirus pandemic.&nbsp; In the world of Open Source Software where countless projects have run over the internet for decades, we've accumulated a lot of hard-learned lessons about the possibilities and pitfalls of remote collaboration.&nbsp; Perhaps our experiences can inform some of the suddenly-remote teams out there straining to find their way in these difficult times.&nbsp; Let's help them to do their best!<br><br></p><p><i><span style="font-size: 14px;">Marvin Humphrey is a Member Emeritus of the ASF and a past VP Incubator, VP&nbsp;</span>Legal Affairs, and member of the Board of Directors.&nbsp; These days, he is focusing on family concerns and consulting part-time.</i></p><p><span style="font-size: 14px;"><i>= = =</i></span></p><p></p><p><span style="font-size: 14px;"><i>"Success at Apache" is a monthly blog series that focuses on the processes behind why the ASF "just works" https://blogs.apache.org/foundation/category/SuccessAtApache&nbsp;&nbsp;</i></span></p>
