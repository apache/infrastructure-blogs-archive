---
layout: post
title: Apache Log4j CVEs
date: '2021-12-14T23:37:43+00:00'
categories: foundation
---
<p>The Apache Software Foundation project Apache Logging Services has responded to a security vulnerability that is described in two CVEs, CVE-2021-44228 and CVE-2021-45046. In this post we’ll list the CVEs affecting Log4j and keep a list of frequently asked questions.&nbsp;</p>
<p>The most recent CVE has been addressed in Apache Log4j 2.16.0, released on 13 December. We recommend that users update to 2.16.0 if possible. While the 2.15.0 release addressed the most severe vulnerability, the fix in Log4j 2.15.0 was incomplete in some non-default configurations and could allow an attacker to execute a denial of service (DoS) attack. Users still on Java 7 should upgrade to the Log4j 2.12.2 release.&nbsp;</p>
<h3>CVE-2021-44228: Apache Log4j2 JNDI features do not protect against attacker controlled LDAP and other JNDI related endpoints</h3>
<p>In Apache Log4j2 versions up to and including 2.14.1, the JNDI features used in configurations, log messages, and parameters do not protect against attacker-controlled LDAP and other JNDI related endpoints. An attacker who can control log messages or log message parameters can execute arbitrary code loaded from LDAP servers when message lookup substitution is enabled.</p>
<p>See the <a href="https://logging.apache.org/log4j/2.x/security.html#cve-2021-44228" target="_blank" rel="noopener">entire description and history on the Apache Logging security page</a>.</p>
<h3>CVE-2021-45046: Apache Log4j2 Thread Context Message Pattern and Context Lookup Pattern vulnerable to a denial of service attack</h3>
<p><span style="color: #333333;">It was found that the fix to address CVE-2021-44228 in Apache Log4j 2.15.0 was incomplete in certain non-default configurations.&nbsp;</span></p>
<p><span style="color: #333333;">This could allow attackers, in some situations, to craft malicious input data using a JNDI Lookup pattern resulting in a DoS attack. Log4j 2.15.0 restricts JNDI LDAP lookups to localhost by default. Note that previous mitigations involving configuration such as to set the system property&nbsp;</span><span style="color: rgb(34, 34, 34); font-family: monospace; font-size: small;">log4j2.</span><span style="font-family: monospace; color: rgb(51, 51, 51);">formatMsgNoLookups</span><span style="color: #333333;">&nbsp;to true do NOT mitigate this specific vulnerability.</span></p>
<p>See the <a href="https://logging.apache.org/log4j/2.x/security.html#cve-2021-45046" target="_blank" rel="noopener">entire description and history on the Apache Logging security page</a>.</p><h3>CVE-2021-4104: Deserialization of untrusted data in JMSAppender in Apache Log4j 1.2</h3><p>Apache Log4j 1.x has been end-of-life since August 2015. However, we are aware that it is still a dependency for some applications and in use in some environments. We have found that Log4j 1.2, if used in a non-default configuration with JMSAppender used to perform JNDI requests, is vulnerable to deserialization of untrusted data when the attacker has write access to the Log4j configuration.</p><p>This is not the same vulnerability described in the recent Log4j 2.x CVEs, but it could also result in remote code execution (RCE), so we are providing this information to make users aware of the vulnerability and urge them to upgrade to Log4j 2.16.0 or 2.12.2, or to take steps to mitigate the issue by disabling the use of JMSAppender to perform JNDI requests.</p>
<h2>Frequently Asked Questions about the Log4j vulnerabilities</h2>
<p>In this section we’ll try to address some of the most common questions that our community and press have had about the Log4j vulnerabilities.&nbsp;</p>
<h3>What about systems or applications with Log4j 1.x?</h3>
<p>While the Log4j 1.x series is not known to be affected by the two CVEs above, it has reached end of life and is no longer supported. Vulnerabilities reported after August 2015 against Log4j 1.x were not checked and will not be fixed. Users should upgrade to Log4j 2 to obtain security fixes.</p>
<h3>How many systems have been impacted or how widespread is the impact of this CVE?</h3>
<p>Log4j, like all software distributed by the Apache Software Foundation, is open source. It’s been distributed via a mirror system for many years and then more recently via a Content Delivery Network (CDN) directly to users and developers, and also to organizations who have then shipped it as part of their projects, products or services.&nbsp;</p>
<p>We know that Log4j is included in a number of ASF projects, other open source projects and a number of products and services. But beyond that any numbers would merely be speculation and most likely wrong by a wide margin.</p>
<h3>Are any other Apache projects impacted by the Log4j vulnerabilities?</h3>
<p>Yes. The Apache Security Team has compiled a list of projects that are known to be affected with links to updates if available. See the <a href="https://blogs.apache.org/security/entry/cve-2021-44228" target="_blank" rel="noopener">Apache projects affected by log4j CVE-2021-44228 blog post</a>.</p>
<p>Apache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net and Log4cxx are not impacted by this.</p>
<h3>How can I get help?</h3>
<p><span style="color: #333333;">If you need help on building or configuring Log4j or other help on following the instructions to mitigate the known vulnerabilities listed here, please send your questions to the public Log4j Users mailing list</span></p>
<p><span style="color: #333333;">If you have encountered an unlisted security vulnerability or other unexpected behavior that has security impact, or if the descriptions here are incomplete, please report them privately to the </span><span style="color: #0088cc;">Log4j Security Team</span><span style="color: #333333;">. Thank you.</span></p>
